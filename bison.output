Terminals unused in grammar

    tERROR


Grammar

    0 $accept: start $end

    1 start: expression

    2 final_expression: variable_definition
    3                 | variable_assignement
    4                 | print_statement
    5                 | if_statement
    6                 | while_statement
    7                 | function_call
    8                 | return_expr
    9                 | function_definition

   10 expression: variable_definition
   11           | variable_assignement
   12           | print_statement
   13           | if_statement
   14           | while_statement
   15           | function_call
   16           | function_definition
   17           | final_expression expression
   18           | return_expr

   19 function_argument_definition: ε
   20                             | tINT tID
   21                             | tVOID
   22                             | function_argument_definition tCOMMA function_argument_definition

   23 function_definition: tINT tID tLPAR function_argument_definition tRPAR tLBRACE expression tRBRACE
   24                    | tVOID tID tLPAR function_argument_definition tRPAR tLBRACE expression tRBRACE

   25 function_args: ε
   26              | value
   27              | value tCOMMA function_args

   28 function_call: function_call_void
   29              | function_call_int

   30 function_call_void: tID tLPAR function_args tRPAR tSEMI

   31 function_call_int: tID tLPAR function_args tRPAR

   32 return_expr: tRETURN value tSEMI

   33 variable_definition: tINT variable_definition_content tSEMI

   34 variable_definition_content: tID tASSIGN value
   35                            | tID

   36 variable_assignement: tID tASSIGN value tSEMI

   37 print_statement: tPRINT tLPAR tRPAR tSEMI
   38                | tPRINT tLPAR value tRPAR tSEMI

   39 symbol: tADD
   40       | tSUB
   41       | tMUL
   42       | tDIV
   43       | tLE
   44       | tGE
   45       | tGT
   46       | tNE
   47       | tEQ
   48       | tLT
   49       | tAND
   50       | tOR

   51 final_value: tNB
   52            | function_call_int
   53            | tNOT final_value
   54            | tID

   55 value: tNB
   56      | function_call_int
   57      | final_value symbol value
   58      | tNOT value
   59      | tID

   60 if_statement: tIF tLPAR value tRPAR tLBRACE expression tRBRACE
   61             | tIF tLPAR value tRPAR tLBRACE expression tRBRACE tELSE tLBRACE expression tRBRACE
   62             | tIF tLPAR value tRPAR tLBRACE expression tRBRACE tELSE if_statement

   63 while_statement: tWHILE tLPAR value tRPAR tLBRACE expression tRBRACE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tVOID (258) 21 24
    tINT (259) 20 23 33
    tIF (260) 60 61 62
    tPRINT (261) 37 38
    tELSE (262) 61 62
    tWHILE (263) 63
    tRETURN (264) 32
    tEQ (265) 47
    tLE (266) 43
    tGE (267) 44
    tNE (268) 46
    tGT (269) 45
    tLT (270) 48
    tAND (271) 49
    tOR (272) 50
    tNOT (273) 53 58
    tASSIGN (274) 34 36
    tADD (275) 39
    tSUB (276) 40
    tMUL (277) 41
    tDIV (278) 42
    tLPAR (279) 23 24 30 31 37 38 60 61 62 63
    tRPAR (280) 23 24 30 31 37 38 60 61 62 63
    tLBRACE (281) 23 24 60 61 62 63
    tRBRACE (282) 23 24 60 61 62 63
    tSEMI (283) 30 32 33 36 37 38
    tCOMMA (284) 22 27
    tID <id> (285) 20 23 24 30 31 34 35 36 54 59
    tNB (286) 51 55
    tERROR (287)


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    start (34)
        on left: 1
        on right: 0
    final_expression (35)
        on left: 2 3 4 5 6 7 8 9
        on right: 17
    expression (36)
        on left: 10 11 12 13 14 15 16 17 18
        on right: 1 17 23 24 60 61 62 63
    function_argument_definition (37)
        on left: 19 20 21 22
        on right: 22 23 24
    function_definition (38)
        on left: 23 24
        on right: 9 16
    function_args (39)
        on left: 25 26 27
        on right: 27 30 31
    function_call (40)
        on left: 28 29
        on right: 7 15
    function_call_void (41)
        on left: 30
        on right: 28
    function_call_int (42)
        on left: 31
        on right: 29 52 56
    return_expr (43)
        on left: 32
        on right: 8 18
    variable_definition (44)
        on left: 33
        on right: 2 10
    variable_definition_content (45)
        on left: 34 35
        on right: 33
    variable_assignement <id> (46)
        on left: 36
        on right: 3 11
    print_statement (47)
        on left: 37 38
        on right: 4 12
    symbol (48)
        on left: 39 40 41 42 43 44 45 46 47 48 49 50
        on right: 57
    final_value (49)
        on left: 51 52 53 54
        on right: 53 57
    value (50)
        on left: 55 56 57 58 59
        on right: 26 27 32 34 36 38 57 58 60 61 62 63
    if_statement (51)
        on left: 60 61 62
        on right: 5 13 62
    while_statement (52)
        on left: 63
        on right: 6 14


State 0

    0 $accept: • start $end

    tVOID    shift, and go to state 1
    tINT     shift, and go to state 2
    tIF      shift, and go to state 3
    tPRINT   shift, and go to state 4
    tWHILE   shift, and go to state 5
    tRETURN  shift, and go to state 6
    tID      shift, and go to state 7

    start                 go to state 8
    final_expression      go to state 9
    expression            go to state 10
    function_definition   go to state 11
    function_call         go to state 12
    function_call_void    go to state 13
    function_call_int     go to state 14
    return_expr           go to state 15
    variable_definition   go to state 16
    variable_assignement  go to state 17
    print_statement       go to state 18
    if_statement          go to state 19
    while_statement       go to state 20


State 1

   24 function_definition: tVOID • tID tLPAR function_argument_definition tRPAR tLBRACE expression tRBRACE

    tID  shift, and go to state 21


State 2

   23 function_definition: tINT • tID tLPAR function_argument_definition tRPAR tLBRACE expression tRBRACE
   33 variable_definition: tINT • variable_definition_content tSEMI

    tID  shift, and go to state 22

    variable_definition_content  go to state 23


State 3

   60 if_statement: tIF • tLPAR value tRPAR tLBRACE expression tRBRACE
   61             | tIF • tLPAR value tRPAR tLBRACE expression tRBRACE tELSE tLBRACE expression tRBRACE
   62             | tIF • tLPAR value tRPAR tLBRACE expression tRBRACE tELSE if_statement

    tLPAR  shift, and go to state 24


State 4

   37 print_statement: tPRINT • tLPAR tRPAR tSEMI
   38                | tPRINT • tLPAR value tRPAR tSEMI

    tLPAR  shift, and go to state 25


State 5

   63 while_statement: tWHILE • tLPAR value tRPAR tLBRACE expression tRBRACE

    tLPAR  shift, and go to state 26


State 6

   32 return_expr: tRETURN • value tSEMI

    tNOT  shift, and go to state 27
    tID   shift, and go to state 28
    tNB   shift, and go to state 29

    function_call_int  go to state 30
    final_value        go to state 31
    value              go to state 32


State 7

   30 function_call_void: tID • tLPAR function_args tRPAR tSEMI
   31 function_call_int: tID • tLPAR function_args tRPAR
   36 variable_assignement: tID • tASSIGN value tSEMI

    tASSIGN  shift, and go to state 33
    tLPAR    shift, and go to state 34


State 8

    0 $accept: start • $end

    $end  shift, and go to state 35


State 9

   17 expression: final_expression • expression

    tVOID    shift, and go to state 1
    tINT     shift, and go to state 2
    tIF      shift, and go to state 3
    tPRINT   shift, and go to state 4
    tWHILE   shift, and go to state 5
    tRETURN  shift, and go to state 6
    tID      shift, and go to state 7

    final_expression      go to state 9
    expression            go to state 36
    function_definition   go to state 11
    function_call         go to state 12
    function_call_void    go to state 13
    function_call_int     go to state 14
    return_expr           go to state 15
    variable_definition   go to state 16
    variable_assignement  go to state 17
    print_statement       go to state 18
    if_statement          go to state 19
    while_statement       go to state 20


State 10

    1 start: expression •

    $default  reduce using rule 1 (start)


State 11

    9 final_expression: function_definition •
   16 expression: function_definition •

    $end      reduce using rule 16 (expression)
    tRBRACE   reduce using rule 16 (expression)
    $default  reduce using rule 9 (final_expression)


State 12

    7 final_expression: function_call •
   15 expression: function_call •

    $end      reduce using rule 15 (expression)
    tRBRACE   reduce using rule 15 (expression)
    $default  reduce using rule 7 (final_expression)


State 13

   28 function_call: function_call_void •

    $default  reduce using rule 28 (function_call)


State 14

   29 function_call: function_call_int •

    $default  reduce using rule 29 (function_call)


State 15

    8 final_expression: return_expr •
   18 expression: return_expr •

    $end      reduce using rule 18 (expression)
    tRBRACE   reduce using rule 18 (expression)
    $default  reduce using rule 8 (final_expression)


State 16

    2 final_expression: variable_definition •
   10 expression: variable_definition •

    $end      reduce using rule 10 (expression)
    tRBRACE   reduce using rule 10 (expression)
    $default  reduce using rule 2 (final_expression)


State 17

    3 final_expression: variable_assignement •
   11 expression: variable_assignement •

    $end      reduce using rule 11 (expression)
    tRBRACE   reduce using rule 11 (expression)
    $default  reduce using rule 3 (final_expression)


State 18

    4 final_expression: print_statement •
   12 expression: print_statement •

    $end      reduce using rule 12 (expression)
    tRBRACE   reduce using rule 12 (expression)
    $default  reduce using rule 4 (final_expression)


State 19

    5 final_expression: if_statement •
   13 expression: if_statement •

    $end      reduce using rule 13 (expression)
    tRBRACE   reduce using rule 13 (expression)
    $default  reduce using rule 5 (final_expression)


State 20

    6 final_expression: while_statement •
   14 expression: while_statement •

    $end      reduce using rule 14 (expression)
    tRBRACE   reduce using rule 14 (expression)
    $default  reduce using rule 6 (final_expression)


State 21

   24 function_definition: tVOID tID • tLPAR function_argument_definition tRPAR tLBRACE expression tRBRACE

    tLPAR  shift, and go to state 37


State 22

   23 function_definition: tINT tID • tLPAR function_argument_definition tRPAR tLBRACE expression tRBRACE
   34 variable_definition_content: tID • tASSIGN value
   35                            | tID •

    tASSIGN  shift, and go to state 38
    tLPAR    shift, and go to state 39

    $default  reduce using rule 35 (variable_definition_content)


State 23

   33 variable_definition: tINT variable_definition_content • tSEMI

    tSEMI  shift, and go to state 40


State 24

   60 if_statement: tIF tLPAR • value tRPAR tLBRACE expression tRBRACE
   61             | tIF tLPAR • value tRPAR tLBRACE expression tRBRACE tELSE tLBRACE expression tRBRACE
   62             | tIF tLPAR • value tRPAR tLBRACE expression tRBRACE tELSE if_statement

    tNOT  shift, and go to state 27
    tID   shift, and go to state 28
    tNB   shift, and go to state 29

    function_call_int  go to state 30
    final_value        go to state 31
    value              go to state 41


State 25

   37 print_statement: tPRINT tLPAR • tRPAR tSEMI
   38                | tPRINT tLPAR • value tRPAR tSEMI

    tNOT   shift, and go to state 27
    tRPAR  shift, and go to state 42
    tID    shift, and go to state 28
    tNB    shift, and go to state 29

    function_call_int  go to state 30
    final_value        go to state 31
    value              go to state 43


State 26

   63 while_statement: tWHILE tLPAR • value tRPAR tLBRACE expression tRBRACE

    tNOT  shift, and go to state 27
    tID   shift, and go to state 28
    tNB   shift, and go to state 29

    function_call_int  go to state 30
    final_value        go to state 31
    value              go to state 44


State 27

   53 final_value: tNOT • final_value
   58 value: tNOT • value

    tNOT  shift, and go to state 27
    tID   shift, and go to state 28
    tNB   shift, and go to state 29

    function_call_int  go to state 30
    final_value        go to state 45
    value              go to state 46


State 28

   31 function_call_int: tID • tLPAR function_args tRPAR
   54 final_value: tID •
   59 value: tID •

    tLPAR  shift, and go to state 47

    tRPAR     reduce using rule 59 (value)
    tSEMI     reduce using rule 59 (value)
    tCOMMA    reduce using rule 59 (value)
    $default  reduce using rule 54 (final_value)


State 29

   51 final_value: tNB •
   55 value: tNB •

    tRPAR     reduce using rule 55 (value)
    tSEMI     reduce using rule 55 (value)
    tCOMMA    reduce using rule 55 (value)
    $default  reduce using rule 51 (final_value)


State 30

   52 final_value: function_call_int •
   56 value: function_call_int •

    tRPAR     reduce using rule 56 (value)
    tSEMI     reduce using rule 56 (value)
    tCOMMA    reduce using rule 56 (value)
    $default  reduce using rule 52 (final_value)


State 31

   57 value: final_value • symbol value

    tEQ   shift, and go to state 48
    tLE   shift, and go to state 49
    tGE   shift, and go to state 50
    tNE   shift, and go to state 51
    tGT   shift, and go to state 52
    tLT   shift, and go to state 53
    tAND  shift, and go to state 54
    tOR   shift, and go to state 55
    tADD  shift, and go to state 56
    tSUB  shift, and go to state 57
    tMUL  shift, and go to state 58
    tDIV  shift, and go to state 59

    symbol  go to state 60


State 32

   32 return_expr: tRETURN value • tSEMI

    tSEMI  shift, and go to state 61


State 33

   36 variable_assignement: tID tASSIGN • value tSEMI

    tNOT  shift, and go to state 27
    tID   shift, and go to state 28
    tNB   shift, and go to state 29

    function_call_int  go to state 30
    final_value        go to state 31
    value              go to state 62


State 34

   30 function_call_void: tID tLPAR • function_args tRPAR tSEMI
   31 function_call_int: tID tLPAR • function_args tRPAR

    tNOT  shift, and go to state 27
    tID   shift, and go to state 28
    tNB   shift, and go to state 29

    $default  reduce using rule 25 (function_args)

    function_args      go to state 63
    function_call_int  go to state 30
    final_value        go to state 31
    value              go to state 64


State 35

    0 $accept: start $end •

    $default  accept


State 36

   17 expression: final_expression expression •

    $default  reduce using rule 17 (expression)


State 37

   24 function_definition: tVOID tID tLPAR • function_argument_definition tRPAR tLBRACE expression tRBRACE

    tVOID  shift, and go to state 65
    tINT   shift, and go to state 66

    $default  reduce using rule 19 (function_argument_definition)

    function_argument_definition  go to state 67


State 38

   34 variable_definition_content: tID tASSIGN • value

    tNOT  shift, and go to state 27
    tID   shift, and go to state 28
    tNB   shift, and go to state 29

    function_call_int  go to state 30
    final_value        go to state 31
    value              go to state 68


State 39

   23 function_definition: tINT tID tLPAR • function_argument_definition tRPAR tLBRACE expression tRBRACE

    tVOID  shift, and go to state 65
    tINT   shift, and go to state 66

    $default  reduce using rule 19 (function_argument_definition)

    function_argument_definition  go to state 69


State 40

   33 variable_definition: tINT variable_definition_content tSEMI •

    $default  reduce using rule 33 (variable_definition)


State 41

   60 if_statement: tIF tLPAR value • tRPAR tLBRACE expression tRBRACE
   61             | tIF tLPAR value • tRPAR tLBRACE expression tRBRACE tELSE tLBRACE expression tRBRACE
   62             | tIF tLPAR value • tRPAR tLBRACE expression tRBRACE tELSE if_statement

    tRPAR  shift, and go to state 70


State 42

   37 print_statement: tPRINT tLPAR tRPAR • tSEMI

    tSEMI  shift, and go to state 71


State 43

   38 print_statement: tPRINT tLPAR value • tRPAR tSEMI

    tRPAR  shift, and go to state 72


State 44

   63 while_statement: tWHILE tLPAR value • tRPAR tLBRACE expression tRBRACE

    tRPAR  shift, and go to state 73


State 45

   53 final_value: tNOT final_value •
   57 value: final_value • symbol value

    $default  reduce using rule 53 (final_value)

    symbol  go to state 60


State 46

   58 value: tNOT value •

    $default  reduce using rule 58 (value)


State 47

   31 function_call_int: tID tLPAR • function_args tRPAR

    tNOT  shift, and go to state 27
    tID   shift, and go to state 28
    tNB   shift, and go to state 29

    $default  reduce using rule 25 (function_args)

    function_args      go to state 74
    function_call_int  go to state 30
    final_value        go to state 31
    value              go to state 64


State 48

   47 symbol: tEQ •

    $default  reduce using rule 47 (symbol)


State 49

   43 symbol: tLE •

    $default  reduce using rule 43 (symbol)


State 50

   44 symbol: tGE •

    $default  reduce using rule 44 (symbol)


State 51

   46 symbol: tNE •

    $default  reduce using rule 46 (symbol)


State 52

   45 symbol: tGT •

    $default  reduce using rule 45 (symbol)


State 53

   48 symbol: tLT •

    $default  reduce using rule 48 (symbol)


State 54

   49 symbol: tAND •

    $default  reduce using rule 49 (symbol)


State 55

   50 symbol: tOR •

    $default  reduce using rule 50 (symbol)


State 56

   39 symbol: tADD •

    $default  reduce using rule 39 (symbol)


State 57

   40 symbol: tSUB •

    $default  reduce using rule 40 (symbol)


State 58

   41 symbol: tMUL •

    $default  reduce using rule 41 (symbol)


State 59

   42 symbol: tDIV •

    $default  reduce using rule 42 (symbol)


State 60

   57 value: final_value symbol • value

    tNOT  shift, and go to state 27
    tID   shift, and go to state 28
    tNB   shift, and go to state 29

    function_call_int  go to state 30
    final_value        go to state 31
    value              go to state 75


State 61

   32 return_expr: tRETURN value tSEMI •

    $default  reduce using rule 32 (return_expr)


State 62

   36 variable_assignement: tID tASSIGN value • tSEMI

    tSEMI  shift, and go to state 76


State 63

   30 function_call_void: tID tLPAR function_args • tRPAR tSEMI
   31 function_call_int: tID tLPAR function_args • tRPAR

    tRPAR  shift, and go to state 77


State 64

   26 function_args: value •
   27              | value • tCOMMA function_args

    tCOMMA  shift, and go to state 78

    $default  reduce using rule 26 (function_args)


State 65

   21 function_argument_definition: tVOID •

    $default  reduce using rule 21 (function_argument_definition)


State 66

   20 function_argument_definition: tINT • tID

    tID  shift, and go to state 79


State 67

   22 function_argument_definition: function_argument_definition • tCOMMA function_argument_definition
   24 function_definition: tVOID tID tLPAR function_argument_definition • tRPAR tLBRACE expression tRBRACE

    tRPAR   shift, and go to state 80
    tCOMMA  shift, and go to state 81


State 68

   34 variable_definition_content: tID tASSIGN value •

    $default  reduce using rule 34 (variable_definition_content)


State 69

   22 function_argument_definition: function_argument_definition • tCOMMA function_argument_definition
   23 function_definition: tINT tID tLPAR function_argument_definition • tRPAR tLBRACE expression tRBRACE

    tRPAR   shift, and go to state 82
    tCOMMA  shift, and go to state 81


State 70

   60 if_statement: tIF tLPAR value tRPAR • tLBRACE expression tRBRACE
   61             | tIF tLPAR value tRPAR • tLBRACE expression tRBRACE tELSE tLBRACE expression tRBRACE
   62             | tIF tLPAR value tRPAR • tLBRACE expression tRBRACE tELSE if_statement

    tLBRACE  shift, and go to state 83


State 71

   37 print_statement: tPRINT tLPAR tRPAR tSEMI •

    $default  reduce using rule 37 (print_statement)


State 72

   38 print_statement: tPRINT tLPAR value tRPAR • tSEMI

    tSEMI  shift, and go to state 84


State 73

   63 while_statement: tWHILE tLPAR value tRPAR • tLBRACE expression tRBRACE

    tLBRACE  shift, and go to state 85


State 74

   31 function_call_int: tID tLPAR function_args • tRPAR

    tRPAR  shift, and go to state 86


State 75

   57 value: final_value symbol value •

    $default  reduce using rule 57 (value)


State 76

   36 variable_assignement: tID tASSIGN value tSEMI •

    $default  reduce using rule 36 (variable_assignement)


State 77

   30 function_call_void: tID tLPAR function_args tRPAR • tSEMI
   31 function_call_int: tID tLPAR function_args tRPAR •

    tSEMI  shift, and go to state 87

    $default  reduce using rule 31 (function_call_int)


State 78

   27 function_args: value tCOMMA • function_args

    tNOT  shift, and go to state 27
    tID   shift, and go to state 28
    tNB   shift, and go to state 29

    $default  reduce using rule 25 (function_args)

    function_args      go to state 88
    function_call_int  go to state 30
    final_value        go to state 31
    value              go to state 64


State 79

   20 function_argument_definition: tINT tID •

    $default  reduce using rule 20 (function_argument_definition)


State 80

   24 function_definition: tVOID tID tLPAR function_argument_definition tRPAR • tLBRACE expression tRBRACE

    tLBRACE  shift, and go to state 89


State 81

   22 function_argument_definition: function_argument_definition tCOMMA • function_argument_definition

    tVOID  shift, and go to state 65
    tINT   shift, and go to state 66

    $default  reduce using rule 19 (function_argument_definition)

    function_argument_definition  go to state 90


State 82

   23 function_definition: tINT tID tLPAR function_argument_definition tRPAR • tLBRACE expression tRBRACE

    tLBRACE  shift, and go to state 91


State 83

   60 if_statement: tIF tLPAR value tRPAR tLBRACE • expression tRBRACE
   61             | tIF tLPAR value tRPAR tLBRACE • expression tRBRACE tELSE tLBRACE expression tRBRACE
   62             | tIF tLPAR value tRPAR tLBRACE • expression tRBRACE tELSE if_statement

    tVOID    shift, and go to state 1
    tINT     shift, and go to state 2
    tIF      shift, and go to state 3
    tPRINT   shift, and go to state 4
    tWHILE   shift, and go to state 5
    tRETURN  shift, and go to state 6
    tID      shift, and go to state 7

    final_expression      go to state 9
    expression            go to state 92
    function_definition   go to state 11
    function_call         go to state 12
    function_call_void    go to state 13
    function_call_int     go to state 14
    return_expr           go to state 15
    variable_definition   go to state 16
    variable_assignement  go to state 17
    print_statement       go to state 18
    if_statement          go to state 19
    while_statement       go to state 20


State 84

   38 print_statement: tPRINT tLPAR value tRPAR tSEMI •

    $default  reduce using rule 38 (print_statement)


State 85

   63 while_statement: tWHILE tLPAR value tRPAR tLBRACE • expression tRBRACE

    tVOID    shift, and go to state 1
    tINT     shift, and go to state 2
    tIF      shift, and go to state 3
    tPRINT   shift, and go to state 4
    tWHILE   shift, and go to state 5
    tRETURN  shift, and go to state 6
    tID      shift, and go to state 7

    final_expression      go to state 9
    expression            go to state 93
    function_definition   go to state 11
    function_call         go to state 12
    function_call_void    go to state 13
    function_call_int     go to state 14
    return_expr           go to state 15
    variable_definition   go to state 16
    variable_assignement  go to state 17
    print_statement       go to state 18
    if_statement          go to state 19
    while_statement       go to state 20


State 86

   31 function_call_int: tID tLPAR function_args tRPAR •

    $default  reduce using rule 31 (function_call_int)


State 87

   30 function_call_void: tID tLPAR function_args tRPAR tSEMI •

    $default  reduce using rule 30 (function_call_void)


State 88

   27 function_args: value tCOMMA function_args •

    $default  reduce using rule 27 (function_args)


State 89

   24 function_definition: tVOID tID tLPAR function_argument_definition tRPAR tLBRACE • expression tRBRACE

    tVOID    shift, and go to state 1
    tINT     shift, and go to state 2
    tIF      shift, and go to state 3
    tPRINT   shift, and go to state 4
    tWHILE   shift, and go to state 5
    tRETURN  shift, and go to state 6
    tID      shift, and go to state 7

    final_expression      go to state 9
    expression            go to state 94
    function_definition   go to state 11
    function_call         go to state 12
    function_call_void    go to state 13
    function_call_int     go to state 14
    return_expr           go to state 15
    variable_definition   go to state 16
    variable_assignement  go to state 17
    print_statement       go to state 18
    if_statement          go to state 19
    while_statement       go to state 20


State 90

   22 function_argument_definition: function_argument_definition • tCOMMA function_argument_definition
   22                             | function_argument_definition tCOMMA function_argument_definition •

    $default  reduce using rule 22 (function_argument_definition)


State 91

   23 function_definition: tINT tID tLPAR function_argument_definition tRPAR tLBRACE • expression tRBRACE

    tVOID    shift, and go to state 1
    tINT     shift, and go to state 2
    tIF      shift, and go to state 3
    tPRINT   shift, and go to state 4
    tWHILE   shift, and go to state 5
    tRETURN  shift, and go to state 6
    tID      shift, and go to state 7

    final_expression      go to state 9
    expression            go to state 95
    function_definition   go to state 11
    function_call         go to state 12
    function_call_void    go to state 13
    function_call_int     go to state 14
    return_expr           go to state 15
    variable_definition   go to state 16
    variable_assignement  go to state 17
    print_statement       go to state 18
    if_statement          go to state 19
    while_statement       go to state 20


State 92

   60 if_statement: tIF tLPAR value tRPAR tLBRACE expression • tRBRACE
   61             | tIF tLPAR value tRPAR tLBRACE expression • tRBRACE tELSE tLBRACE expression tRBRACE
   62             | tIF tLPAR value tRPAR tLBRACE expression • tRBRACE tELSE if_statement

    tRBRACE  shift, and go to state 96


State 93

   63 while_statement: tWHILE tLPAR value tRPAR tLBRACE expression • tRBRACE

    tRBRACE  shift, and go to state 97


State 94

   24 function_definition: tVOID tID tLPAR function_argument_definition tRPAR tLBRACE expression • tRBRACE

    tRBRACE  shift, and go to state 98


State 95

   23 function_definition: tINT tID tLPAR function_argument_definition tRPAR tLBRACE expression • tRBRACE

    tRBRACE  shift, and go to state 99


State 96

   60 if_statement: tIF tLPAR value tRPAR tLBRACE expression tRBRACE •
   61             | tIF tLPAR value tRPAR tLBRACE expression tRBRACE • tELSE tLBRACE expression tRBRACE
   62             | tIF tLPAR value tRPAR tLBRACE expression tRBRACE • tELSE if_statement

    tELSE  shift, and go to state 100

    $default  reduce using rule 60 (if_statement)


State 97

   63 while_statement: tWHILE tLPAR value tRPAR tLBRACE expression tRBRACE •

    $default  reduce using rule 63 (while_statement)


State 98

   24 function_definition: tVOID tID tLPAR function_argument_definition tRPAR tLBRACE expression tRBRACE •

    $default  reduce using rule 24 (function_definition)


State 99

   23 function_definition: tINT tID tLPAR function_argument_definition tRPAR tLBRACE expression tRBRACE •

    $default  reduce using rule 23 (function_definition)


State 100

   61 if_statement: tIF tLPAR value tRPAR tLBRACE expression tRBRACE tELSE • tLBRACE expression tRBRACE
   62             | tIF tLPAR value tRPAR tLBRACE expression tRBRACE tELSE • if_statement

    tIF      shift, and go to state 3
    tLBRACE  shift, and go to state 101

    if_statement  go to state 102


State 101

   61 if_statement: tIF tLPAR value tRPAR tLBRACE expression tRBRACE tELSE tLBRACE • expression tRBRACE

    tVOID    shift, and go to state 1
    tINT     shift, and go to state 2
    tIF      shift, and go to state 3
    tPRINT   shift, and go to state 4
    tWHILE   shift, and go to state 5
    tRETURN  shift, and go to state 6
    tID      shift, and go to state 7

    final_expression      go to state 9
    expression            go to state 103
    function_definition   go to state 11
    function_call         go to state 12
    function_call_void    go to state 13
    function_call_int     go to state 14
    return_expr           go to state 15
    variable_definition   go to state 16
    variable_assignement  go to state 17
    print_statement       go to state 18
    if_statement          go to state 19
    while_statement       go to state 20


State 102

   62 if_statement: tIF tLPAR value tRPAR tLBRACE expression tRBRACE tELSE if_statement •

    $default  reduce using rule 62 (if_statement)


State 103

   61 if_statement: tIF tLPAR value tRPAR tLBRACE expression tRBRACE tELSE tLBRACE expression • tRBRACE

    tRBRACE  shift, and go to state 104


State 104

   61 if_statement: tIF tLPAR value tRPAR tLBRACE expression tRBRACE tELSE tLBRACE expression tRBRACE •

    $default  reduce using rule 61 (if_statement)
